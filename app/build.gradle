plugins {
    alias libs.plugins.android.application
    alias libs.plugins.jetbrains.kotlin.android
    alias libs.plugins.navigation.safeargs
    alias libs.plugins.realm.kotlin
    alias libs.plugins.hilt
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

android {
    namespace 'com.tkw.omamul'
    compileSdk 34

    defaultConfig {
        applicationId "com.tkw.omamul"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding = true
        viewBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }
}

dependencies {
    implementation project(':core:data')
    implementation project(':core:common')
    implementation project(':core:util')
    implementation project(':feature-common:base')
    implementation project(':feature-common:init')
    implementation project(':feature-water:alarm')
    implementation project(':feature-water:cup')
    implementation project(':feature-water:home')
    implementation project(':feature-water:record')
    implementation project(':feature-water:setting')

    implementation libs.androidx.core
    implementation libs.androidx.appcompat
    implementation libs.android.material
    implementation libs.androidx.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.androidx.test.junit
    androidTestImplementation libs.androidx.test.espresso

    implementation libs.androidx.navigation.fragment
    implementation libs.androidx.navigation.ui
    implementation libs.androidx.splash

    //by viewModels
    implementation libs.androidx.activity.ktx

    //by activityViewModels
    implementation libs.androidx.fragment.ktx

    //Flow.asLiveData
    implementation libs.androidx.lifecycle.livedata

    //retrofit
    implementation libs.bundles.retrofit

    //realm
    implementation libs.realm.kotlin.library.base
    implementation libs.realm.kotlin.library.sync// If using Device Sync

    //chart
    implementation libs.android.chart

    //hilt
    implementation libs.hilt
    // KAPT(Kotlin Annotation Processing Tools), 어노테이션 사용, annotationProcessor의 대체
    kapt libs.hilt.compiler
}

kapt {
    correctErrorTypes true
}